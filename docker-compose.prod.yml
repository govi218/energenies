version: '3'
services:

  flask:
    container_name: flask
    build:
      context: application
      dockerfile: Dockerfile    
    restart: always
    environment:
      BUILD: ${BUILD}
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      APP_PORT: ${APP_PORT}
      SECRET_KEY: ${SECRET_KEY}
    networks:
      - primary

  nginx:
    container_name: nginx
    image: nginx:1.15-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./proxy/nginx:/etc/nginx/conf.d
      - ./proxy/certbot/conf:/etc/letsencrypt
      - ./proxy/certbot/www:/var/www/certbot
    depends_on: 
      - flask
    networks:
      - primary
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    image: certbot/certbot:v1.2.0
    restart: always
    volumes:
        - ./proxy/certbot/conf:/etc/letsencrypt
        - ./proxy/certbot/www:/var/www/certbot
    networks: 
        - primary
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

 
networks:
  primary:
    driver: bridge

    
volumes:
  app-data:
    driver: local
  nginx-ddata:
    driver: local